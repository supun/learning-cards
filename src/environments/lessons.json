{"lessons":[
        { "id":1, "title": "Introduction", "description": "<p>This Ecma Standard defines the ECMAScript 2015 Language. It is the<b> sixth</b> <b>edition</b> of the ECMAScript Language Specification. Since publication of the first edition in 1997, ECMAScript has grown to be one of the world’s most widely used general purpose programming languages. It is best known as the language embedded in web browsers but has also been widely adopted for server and embedded applications. The<b> sixth edition</b> is the most extensive update to ECMAScript since the publication of the first edition in 1997.<br></p><p>ECMAScript is based on several originating technologies, the most well-known being JavaScript (Netscape) and JScript (Microsoft). The language was invented by Brendan Eich<br></p><p><i><a href=\"http://www.ecma-international.org/ecma-262/6.0/\" target=\"_blank\">http://www.ecma-international.org/ecma-262/6.0/</a></i><br></p><p><br></p><h3>What is an ECMAScript&nbsp;engine?</h3><p>An ECMAScript engine is a program that executes source code written in a version of the ECMAScript language standard, for example, JavaScript.&nbsp;<span>These are new generation ECMAScript engines for web browsers, all implementing just-in-time compilation (JIT) or variations of that idea.&nbsp;</span></p><p><b>Chakra (JScript9)</b>: A JScript engine used in Internet Explorer. It was first previewed at MIX 10 as part of the Internet Explorer 9 Platform Preview.</p><p><b>Chakra:</b> A JavaScript engine used in Microsoft Edge.</p><p><b>SpiderMonkey:</b> A JavaScript engine in Mozilla Gecko applications, including Firefox. The engine currently includes the IonMonkey and JägerMonkey compilers, has previously included the TraceMonkey compiler (first javascript JIT), and is planned to include the forthcoming OdinMonkey compiler.</p><p><b>V8:</b> A JavaScript engine used in Google Chrome, Node.js, and V8.NET.</p><p><a href=\"https://en.wikipedia.org/wiki/List_of_ECMAScript_engines\" target=\"_blank\">https://en.wikipedia.org/wiki/List_of_ECMAScript_engines</a><br></p><p>Well ES5 is the version which currently runs in a browser and ES6 is the next generation with new features and improved syntax. ES5 has just mentioned is supported by all browsers but for ES6 you will need some polyfills or transpilers which basically takes your ES6 code and rewrites it in ES5 styled way which kind of sound strange but it allows you to use ES6 features today and kind of that's what you would have to do in the past to do the same and ES5. It does it for you and so you're able to run ES6 code today eve n the browsers don't fully supported yet. This course of course will focus on ES6--- image at 2 min</p><p>https://www.youtube.com/watch?v=IEf1KAcK6A8</p>" },
        { "id":2, "title": "Overview", "description": "<p><span>ECMAScript is an object-oriented programming language for performing computations and manipulating computational objects within a host environment. ECMAScript as defined here is not intended to be computationally self-sufficient; indeed, there are no provisions in this specification for input of external data or output of computed results. Instead, it is expected that the computational environment of an ECMAScript program will provide not only the objects and other facilities described in this specification but also certain environment-specific objects, whose description and behaviour are beyond the scope of this specification except to indicate that they may provide certain properties that can be accessed and certain functions that can be called from an ECMAScript program.</span><span>.</span><br></p>" },
        { "id":3, "title": "Web Scripting", "description": "<p>A web browser provides an ECMAScript host environment for client-side computation including, for instance, objects that represent windows, menus, pop-ups, dialog boxes, text areas, anchors, frames, history, cookies, and input/output. Further, the host environment provides a means to attach scripting code to events such as change of focus, page and image loading, unloading, error and abort, selection, form submission, and mouse actions. Scripting code appears within the HTML and the displayed page is a combination of user interface elements and fixed and computed text and images. The scripting code is reactive to user interaction and there is no need for a main program.<br></p>" },
        {"id":4,"title":"ECMAScript Overview","description":"<p>ECMAScript is object-based: basic language and host facilities are provided by objects, and an ECMAScript program is a cluster of communicating objects. In ECMAScript, an object is a collection of zero or more properties each with attributes that determine how each property can be used—for example, when the Writable attribute for a property is set to false, any attempt by executed ECMAScript code to assign a different value to the property fails. Properties are containers that hold other objects, primitive values, or functions. A primitive value is a member of one of the following built-in types: Undefined, Null, Boolean, Number, String, and Symbol; an object is a member of the built-in type Object; and a function is a callable object. A function that is associated with an object via a property is called a method.<br></p>"},
        {"id":5,"title":"First Code","description":"<div class=\"block-image__row\"><div class=\"block-image__col\"><figure class=\"block-image__figure\"><div class=\"block-image__image\"><figure class=\"figure-image\"><img src=\"assets/zNvjEmZXmhsEj_Xq.jpg\" class=\"figure-image__image\" style=\"cursor: zoom-in;\"></figure></div><figcaption class=\"block-image__caption brand--body brand--linkColor\"><p>Simple JavaScript Example</p></figcaption></figure></div><div class=\"block-image__col\"><div class=\"block-image__text brand--body brand--linkColor\"><p><b>Finding a way</b></p><p>Where the road leads, I will go. Along the stark desert, across the wide plains, into the deep forests I will follow the call of the world and embrace its ferocious beauty.</p></div></div></div>"}
]
}
